# Generated by Django 5.0.4 on 2024-04-10 16:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='Название Бренда', help_text='Введите название бренда.', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'db_table': 'firms',
                'db_table_comment': 'Бренды товаров',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(db_comment='Название товара', help_text='Введите название товара', max_length=100)),
                ('price', models.DecimalField(db_comment='Цена', decimal_places=2, help_text='Введите цену товара', max_digits=15)),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'items',
                'db_table_comment': 'Товары',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Outlet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(db_comment='Адрес', help_text='Введите адрес здания.', max_length=200)),
            ],
            options={
                'verbose_name': 'Здание',
                'verbose_name_plural': 'Здания',
                'db_table': 'outlets',
                'db_table_comment': 'Здания',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_comment='ФИО клиента', help_text='Введите ФИО клиента.', max_length=50)),
                ('is_professional', models.BooleanField(db_comment='Профессионал или Любитель?', help_text='Отметьте, если клиент является профессионалом.')),
                ('discount', models.IntegerField(db_comment='Персональная скидка', help_text='Введите персональную скидку клиента.')),
                ('discount_card', models.BooleanField(blank=True, help_text='Отметьте, если у клиента есть дисконтная карта.', null=True)),
            ],
            options={
                'verbose_name': 'Клиент(а)',
                'verbose_name_plural': 'Клиенты',
                'db_table': 'clients',
                'db_table_comment': 'Таблица клиентов различных фотоцентров',
            },
        ),
        migrations.CreateModel(
            name='OutletTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название типа здания.', max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Тип здания',
                'verbose_name_plural': 'Типы зданий',
                'db_table': 'outlet_types',
                'db_table_comment': 'Типы зданий',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='Название компании (поставщика)', help_text='Введите название компании (поставщика)', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'db_table': 'vendors',
                'db_table_comment': 'Поставщики',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('outlet', models.OneToOneField(db_comment='Привязка к зданию', help_text='Связь со зданием в котором расположен филиал', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='entities.outlet')),
                ('num_workers', models.IntegerField(db_comment='Количество работников', help_text='Количество работников в филиале')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
                'db_table': 'branches',
                'db_table_comment': 'Филиалы',
            },
        ),
        migrations.CreateModel(
            name='PhotoStore',
            fields=[
                ('outlet', models.OneToOneField(db_comment='Привязка к зданию', help_text='Связь со зданием в котором расположен фотомагазин', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='entities.outlet')),
                ('num_workers', models.IntegerField(help_text='Количество работников в фотомагазине')),
            ],
            options={
                'verbose_name': 'Фотомагазин',
                'verbose_name_plural': 'Фотомагазины',
                'db_table': 'photo_stores',
                'db_table_comment': 'Фотомагазины',
            },
        ),
        migrations.AddField(
            model_name='outlet',
            name='type',
            field=models.ForeignKey(db_comment='Тип здания', help_text='Выберите тип здания.', on_delete=django.db.models.deletion.DO_NOTHING, to='entities.outlettypes'),
        ),
        migrations.CreateModel(
            name='VendorItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_price', models.IntegerField(blank=True, db_comment='Текущая цена по которой продает поставщик данный товар', help_text='Введите текущую цену по которой продает поставщик данный товар', null=True)),
                ('item', models.ForeignKey(db_comment='Связь с товаром', help_text='Выберите товар', on_delete=django.db.models.deletion.DO_NOTHING, to='entities.item')),
                ('vendor', models.ForeignKey(db_comment='Связь с поставщиком', help_text='Выберите поставщика товара', on_delete=django.db.models.deletion.DO_NOTHING, to='entities.vendor')),
            ],
            options={
                'verbose_name': 'Товар поставщика',
                'verbose_name_plural': 'Товары поставщиков',
                'db_table': 'vendor_items',
                'db_table_comment': 'По какой цене продает поставщик товары',
            },
        ),
        migrations.CreateModel(
            name='Kiosk',
            fields=[
                ('outlet', models.OneToOneField(db_comment='Здание где расположен', help_text='Связь со зданием в котором расположен киоск', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='entities.outlet')),
                ('num_workers', models.IntegerField(db_comment='Количество работников', help_text='Количество работников в киоске')),
                ('branch_outlet', models.ForeignKey(db_comment='Киоск связан с филиаом', help_text='Связь с филиалом, к которому прикреплен киоск', on_delete=django.db.models.deletion.DO_NOTHING, to='entities.branch')),
            ],
            options={
                'verbose_name': 'Киоск',
                'verbose_name_plural': 'Киоски',
                'db_table': 'kiosks',
                'db_table_comment': 'Киоск',
            },
        ),
        migrations.AddConstraint(
            model_name='outlet',
            constraint=models.UniqueConstraint(fields=('type', 'address'), name='unique_type_address'),
        ),
        migrations.AddConstraint(
            model_name='vendoritem',
            constraint=models.UniqueConstraint(fields=('vendor', 'item'), name='unique_vendor_item'),
        ),
    ]
